{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SpiderEL\\\\Desktop\\\\webpage 5.0\\\\frontend\\\\src\\\\pages\\\\ForgotPasswordPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport * as api from '../api';\nimport styles from './LoginPage.module.css'; // We can reuse the login page styles\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ForgotPasswordPage = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [message, setMessage] = useState('');\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setMessage('');\n    setError('');\n    setLoading(true);\n    try {\n      const {\n        data\n      } = await api.forgotPassword({\n        email\n      });\n      setMessage(data.msg);\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.msg) || 'An error occurred.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: styles.form,\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: styles.title,\n        children: \"Forgot Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: styles.success,\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 21\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: styles.error,\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: styles.instructions,\n        children: \"Enter your email address and we will send you a link to reset your password.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.inputGroup,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Email Address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          name: \"email\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: styles.submitButton,\n        disabled: loading,\n        children: loading ? 'Sending...' : 'Send Reset Link'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: styles.redirect,\n        children: [\"Remember your password? \", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/login\",\n          children: \"Login here\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 35\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(ForgotPasswordPage, \"wFxJQ6c6qoE+zKs+kg+pNMMWX5w=\");\n_c = ForgotPasswordPage;\nexport default ForgotPasswordPage;\nvar _c;\n$RefreshReg$(_c, \"ForgotPasswordPage\");","map":{"version":3,"names":["React","useState","Link","api","styles","jsxDEV","_jsxDEV","ForgotPasswordPage","_s","email","setEmail","message","setMessage","error","setError","loading","setLoading","handleSubmit","e","preventDefault","data","forgotPassword","msg","err","_err$response","_err$response$data","response","className","container","children","form","onSubmit","title","fileName","_jsxFileName","lineNumber","columnNumber","success","instructions","inputGroup","htmlFor","type","id","name","value","onChange","target","required","submitButton","disabled","redirect","to","_c","$RefreshReg$"],"sources":["C:/Users/SpiderEL/Desktop/webpage 5.0/frontend/src/pages/ForgotPasswordPage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport * as api from '../api';\r\nimport styles from './LoginPage.module.css'; // We can reuse the login page styles\r\n\r\nconst ForgotPasswordPage = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [message, setMessage] = useState('');\r\n  const [error, setError] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setMessage('');\r\n    setError('');\r\n    setLoading(true);\r\n    try {\r\n      const { data } = await api.forgotPassword({ email });\r\n      setMessage(data.msg);\r\n    } catch (err) {\r\n      setError(err.response?.data?.msg || 'An error occurred.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <form className={styles.form} onSubmit={handleSubmit}>\r\n        <h2 className={styles.title}>Forgot Password</h2>\r\n        {message && <p className={styles.success}>{message}</p>}\r\n        {error && <p className={styles.error}>{error}</p>}\r\n        <p className={styles.instructions}>\r\n          Enter your email address and we will send you a link to reset your password.\r\n        </p>\r\n        <div className={styles.inputGroup}>\r\n          <label htmlFor=\"email\">Email Address</label>\r\n          <input\r\n            type=\"email\"\r\n            id=\"email\"\r\n            name=\"email\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n        <button type=\"submit\" className={styles.submitButton} disabled={loading}>\r\n          {loading ? 'Sending...' : 'Send Reset Link'}\r\n        </button>\r\n        <p className={styles.redirect}>\r\n          Remember your password? <Link to=\"/login\">Login here</Link>\r\n        </p>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ForgotPasswordPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}