{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SpiderEL\\\\Desktop\\\\webpage 5.0\\\\frontend\\\\src\\\\pages\\\\MenuBuilderPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport * as api from '../api';\nimport styles from './MenuBuilderPage.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MenuBuilderPage = () => {\n  _s();\n  const {\n    menuId\n  } = useParams(); // Get the menu ID from the URL\n  const [menu, setMenu] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [isSaving, setIsSaving] = useState(false);\n  useEffect(() => {\n    const fetchMenuById = async () => {\n      if (!menuId) return;\n      setLoading(true);\n      try {\n        const {\n          data\n        } = await api.getMenuById(menuId);\n        setMenu(data);\n      } catch (err) {\n        setError('Could not find the specified menu.');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchMenuById();\n  }, [menuId]);\n  const handleMenuChange = updatedData => {\n    setMenu(prevMenu => ({\n      ...prevMenu,\n      ...updatedData\n    }));\n  };\n  const handleSaveChanges = async () => {\n    setIsSaving(true);\n    try {\n      await api.updateMenuById(menuId, menu);\n      alert('Menu saved successfully!');\n    } catch (err) {\n      alert('Error saving menu. Please try again.');\n    } finally {\n      setIsSaving(false);\n    }\n  };\n\n  // All the item/category handlers now call the generic handleMenuChange\n  const handleAddCategory = () => {\n    const newCategoryName = prompt(\"Enter new category name:\");\n    if (newCategoryName) {\n      const newCategories = [...menu.categories, {\n        name: newCategoryName,\n        items: []\n      }];\n      handleMenuChange({\n        categories: newCategories\n      });\n    }\n  };\n  const handleRemoveCategory = catIndex => {\n    if (window.confirm(\"Are you sure?\")) {\n      const newCategories = menu.categories.filter((_, i) => i !== catIndex);\n      handleMenuChange({\n        categories: newCategories\n      });\n    }\n  };\n  const handleAddItem = catIndex => {\n    const newItem = {\n      name: 'New Item',\n      price: 0,\n      description: '',\n      type: 'veg'\n    };\n    const newCategories = [...menu.categories];\n    newCategories[catIndex].items.push(newItem);\n    handleMenuChange({\n      categories: newCategories\n    });\n  };\n  // ... other handlers would be structured similarly\n\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading Menu...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 59\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      className: styles.error,\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 57\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 23\n  }, this);\n  if (!menu) return null;\n\n  // This is a simplified return statement. The full UI from before would go here.\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.header,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: menu.restaurantName,\n        onChange: e => handleMenuChange({\n          restaurantName: e.target.value\n        }),\n        className: styles.restaurantNameInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSaveChanges,\n        className: styles.saveButton,\n        disabled: isSaving,\n        children: isSaving ? 'Saving...' : 'Save Changes'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Editing Menu: \", menu.restaurantName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Template: \", menu.template]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 9\n  }, this);\n};\n_s(MenuBuilderPage, \"dam50xtvAPdwXAT4JZGsSpHFlzU=\", false, function () {\n  return [useParams];\n});\n_c = MenuBuilderPage;\nexport default MenuBuilderPage;\nvar _c;\n$RefreshReg$(_c, \"MenuBuilderPage\");","map":{"version":3,"names":["React","useEffect","useState","useParams","api","styles","jsxDEV","_jsxDEV","MenuBuilderPage","_s","menuId","menu","setMenu","loading","setLoading","error","setError","isSaving","setIsSaving","fetchMenuById","data","getMenuById","err","handleMenuChange","updatedData","prevMenu","handleSaveChanges","updateMenuById","alert","handleAddCategory","newCategoryName","prompt","newCategories","categories","name","items","handleRemoveCategory","catIndex","window","confirm","filter","_","i","handleAddItem","newItem","price","description","type","push","className","container","children","fileName","_jsxFileName","lineNumber","columnNumber","header","value","restaurantName","onChange","e","target","restaurantNameInput","onClick","saveButton","disabled","template","_c","$RefreshReg$"],"sources":["C:/Users/SpiderEL/Desktop/webpage 5.0/frontend/src/pages/MenuBuilderPage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport * as api from '../api';\r\nimport styles from './MenuBuilderPage.module.css';\r\n\r\nconst MenuBuilderPage = () => {\r\n    const { menuId } = useParams(); // Get the menu ID from the URL\r\n    const [menu, setMenu] = useState(null);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState('');\r\n    const [isSaving, setIsSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const fetchMenuById = async () => {\r\n            if (!menuId) return;\r\n            setLoading(true);\r\n            try {\r\n                const { data } = await api.getMenuById(menuId);\r\n                setMenu(data);\r\n            } catch (err) {\r\n                setError('Could not find the specified menu.');\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        };\r\n        fetchMenuById();\r\n    }, [menuId]);\r\n\r\n    const handleMenuChange = (updatedData) => {\r\n        setMenu(prevMenu => ({ ...prevMenu, ...updatedData }));\r\n    };\r\n\r\n    const handleSaveChanges = async () => {\r\n        setIsSaving(true);\r\n        try {\r\n            await api.updateMenuById(menuId, menu);\r\n            alert('Menu saved successfully!');\r\n        } catch (err) {\r\n            alert('Error saving menu. Please try again.');\r\n        } finally {\r\n            setIsSaving(false);\r\n        }\r\n    };\r\n    \r\n    // All the item/category handlers now call the generic handleMenuChange\r\n    const handleAddCategory = () => {\r\n        const newCategoryName = prompt(\"Enter new category name:\");\r\n        if (newCategoryName) {\r\n            const newCategories = [...menu.categories, { name: newCategoryName, items: [] }];\r\n            handleMenuChange({ categories: newCategories });\r\n        }\r\n    };\r\n    const handleRemoveCategory = (catIndex) => {\r\n        if (window.confirm(\"Are you sure?\")) {\r\n            const newCategories = menu.categories.filter((_, i) => i !== catIndex);\r\n            handleMenuChange({ categories: newCategories });\r\n        }\r\n    };\r\n    const handleAddItem = (catIndex) => {\r\n        const newItem = { name: 'New Item', price: 0, description: '', type: 'veg' };\r\n        const newCategories = [...menu.categories];\r\n        newCategories[catIndex].items.push(newItem);\r\n        handleMenuChange({ categories: newCategories });\r\n    };\r\n    // ... other handlers would be structured similarly\r\n\r\n    if (loading) return <div className={styles.container}><p>Loading Menu...</p></div>;\r\n    if (error) return <div className={styles.container}><p className={styles.error}>{error}</p></div>;\r\n    if (!menu) return null;\r\n\r\n    // This is a simplified return statement. The full UI from before would go here.\r\n    return (\r\n        <div className={styles.container}>\r\n            <div className={styles.header}>\r\n                <input \r\n                    type=\"text\" \r\n                    value={menu.restaurantName} \r\n                    onChange={(e) => handleMenuChange({ restaurantName: e.target.value })}\r\n                    className={styles.restaurantNameInput}\r\n                />\r\n                <button onClick={handleSaveChanges} className={styles.saveButton} disabled={isSaving}>\r\n                    {isSaving ? 'Saving...' : 'Save Changes'}\r\n                </button>\r\n            </div>\r\n            {/* The rest of your menu builder UI would go here, using the 'menu' state */}\r\n            <p>Editing Menu: {menu.restaurantName}</p>\r\n            <p>Template: {menu.template}</p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MenuBuilderPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}