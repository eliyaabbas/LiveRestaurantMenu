{"ast":null,"code":"import axios from 'axios';\n\n// Create an Axios instance with the base URL of your backend\nconst API = axios.create({\n  baseURL: 'http://localhost:5000/api'\n});\n\n// Add a request interceptor to include the token on all requests\nAPI.interceptors.request.use(req => {\n  if (localStorage.getItem('authToken')) {\n    req.headers['x-auth-token'] = localStorage.getItem('authToken');\n  }\n  return req;\n});\n\n// --- Auth Routes ---\nexport const register = formData => API.post('/auth/register', formData);\nexport const login = formData => API.post('/auth/login', formData);\nexport const forgotPassword = formData => API.post('/auth/forgot-password', formData);\nexport const resetPassword = (token, formData) => API.post(`/auth/reset-password/${token}`, formData);\n\n// --- Profile Routes ---\nexport const getProfile = () => API.get('/profile');\nexport const updateProfile = profileData => API.put('/profile', profileData);\n\n// --- Settings Routes ---\n// We can centralize the settings API calls here as well\nexport const getSettings = () => API.get('/settings');\nexport const updateSettings = settingsData => API.put('/settings', settingsData);\n// Add this function to your api/index.js file\nexport const deleteAccount = () => API.delete('/profile');\nexport const getMenu = () => API.get('/menu');\nexport const updateMenu = menuData => API.put('/menu', menuData);\nexport const getPublicMenu = menuId => API.get(`/menu/public/${menuId}`);","map":{"version":3,"names":["axios","API","create","baseURL","interceptors","request","use","req","localStorage","getItem","headers","register","formData","post","login","forgotPassword","resetPassword","token","getProfile","get","updateProfile","profileData","put","getSettings","updateSettings","settingsData","deleteAccount","delete","getMenu","updateMenu","menuData","getPublicMenu","menuId"],"sources":["C:/Users/SpiderEL/Desktop/webpage 5.0/frontend/src/api/index.js"],"sourcesContent":["import axios from 'axios';\r\n\r\n// Create an Axios instance with the base URL of your backend\r\nconst API = axios.create({ baseURL: 'http://localhost:5000/api' });\r\n\r\n// Add a request interceptor to include the token on all requests\r\nAPI.interceptors.request.use((req) => {\r\n  if (localStorage.getItem('authToken')) {\r\n    req.headers['x-auth-token'] = localStorage.getItem('authToken');\r\n  }\r\n  return req;\r\n});\r\n\r\n// --- Auth Routes ---\r\nexport const register = (formData) => API.post('/auth/register', formData);\r\nexport const login = (formData) => API.post('/auth/login', formData);\r\nexport const forgotPassword = (formData) => API.post('/auth/forgot-password', formData);\r\nexport const resetPassword = (token, formData) => API.post(`/auth/reset-password/${token}`, formData);\r\n\r\n// --- Profile Routes ---\r\nexport const getProfile = () => API.get('/profile');\r\nexport const updateProfile = (profileData) => API.put('/profile', profileData);\r\n\r\n// --- Settings Routes ---\r\n// We can centralize the settings API calls here as well\r\nexport const getSettings = () => API.get('/settings');\r\nexport const updateSettings = (settingsData) => API.put('/settings', settingsData);\r\n// Add this function to your api/index.js file\r\nexport const deleteAccount = () => API.delete('/profile');\r\nexport const getMenu = () => API.get('/menu');\r\nexport const updateMenu = (menuData) => API.put('/menu', menuData);\r\nexport const getPublicMenu = (menuId) => API.get(`/menu/public/${menuId}`);"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EAAEC,OAAO,EAAE;AAA4B,CAAC,CAAC;;AAElE;AACAF,GAAG,CAACG,YAAY,CAACC,OAAO,CAACC,GAAG,CAAEC,GAAG,IAAK;EACpC,IAAIC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,EAAE;IACrCF,GAAG,CAACG,OAAO,CAAC,cAAc,CAAC,GAAGF,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;EACjE;EACA,OAAOF,GAAG;AACZ,CAAC,CAAC;;AAEF;AACA,OAAO,MAAMI,QAAQ,GAAIC,QAAQ,IAAKX,GAAG,CAACY,IAAI,CAAC,gBAAgB,EAAED,QAAQ,CAAC;AAC1E,OAAO,MAAME,KAAK,GAAIF,QAAQ,IAAKX,GAAG,CAACY,IAAI,CAAC,aAAa,EAAED,QAAQ,CAAC;AACpE,OAAO,MAAMG,cAAc,GAAIH,QAAQ,IAAKX,GAAG,CAACY,IAAI,CAAC,uBAAuB,EAAED,QAAQ,CAAC;AACvF,OAAO,MAAMI,aAAa,GAAGA,CAACC,KAAK,EAAEL,QAAQ,KAAKX,GAAG,CAACY,IAAI,CAAC,wBAAwBI,KAAK,EAAE,EAAEL,QAAQ,CAAC;;AAErG;AACA,OAAO,MAAMM,UAAU,GAAGA,CAAA,KAAMjB,GAAG,CAACkB,GAAG,CAAC,UAAU,CAAC;AACnD,OAAO,MAAMC,aAAa,GAAIC,WAAW,IAAKpB,GAAG,CAACqB,GAAG,CAAC,UAAU,EAAED,WAAW,CAAC;;AAE9E;AACA;AACA,OAAO,MAAME,WAAW,GAAGA,CAAA,KAAMtB,GAAG,CAACkB,GAAG,CAAC,WAAW,CAAC;AACrD,OAAO,MAAMK,cAAc,GAAIC,YAAY,IAAKxB,GAAG,CAACqB,GAAG,CAAC,WAAW,EAAEG,YAAY,CAAC;AAClF;AACA,OAAO,MAAMC,aAAa,GAAGA,CAAA,KAAMzB,GAAG,CAAC0B,MAAM,CAAC,UAAU,CAAC;AACzD,OAAO,MAAMC,OAAO,GAAGA,CAAA,KAAM3B,GAAG,CAACkB,GAAG,CAAC,OAAO,CAAC;AAC7C,OAAO,MAAMU,UAAU,GAAIC,QAAQ,IAAK7B,GAAG,CAACqB,GAAG,CAAC,OAAO,EAAEQ,QAAQ,CAAC;AAClE,OAAO,MAAMC,aAAa,GAAIC,MAAM,IAAK/B,GAAG,CAACkB,GAAG,CAAC,gBAAgBa,MAAM,EAAE,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}