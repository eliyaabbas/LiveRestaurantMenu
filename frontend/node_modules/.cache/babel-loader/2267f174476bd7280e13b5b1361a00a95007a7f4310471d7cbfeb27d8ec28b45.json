{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SpiderEL\\\\Desktop\\\\webpage 5.0\\\\frontend\\\\src\\\\pages\\\\ResetPasswordPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useParams, useNavigate, Link } from 'react-router-dom';\nimport * as api from '../api';\nimport styles from './LoginPage.module.css'; // Reuse login styles\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ResetPasswordPage = () => {\n  _s();\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [message, setMessage] = useState('');\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n  const {\n    token\n  } = useParams(); // Get the token from the URL\n  const navigate = useNavigate();\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (password !== confirmPassword) {\n      return setError('Passwords do not match.');\n    }\n    setMessage('');\n    setError('');\n    setLoading(true);\n    try {\n      const {\n        data\n      } = await api.resetPassword(token, {\n        password\n      });\n      setMessage(data.msg);\n      // After a short delay, redirect to login\n      setTimeout(() => {\n        navigate('/login');\n      }, 3000);\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.msg) || 'An error occurred.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: styles.form,\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: styles.title,\n        children: \"Reset Your Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: styles.success,\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: styles.error,\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 19\n      }, this), !message && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.inputGroup,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            children: \"New Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"password\",\n            value: password,\n            onChange: e => setPassword(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.inputGroup,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"confirmPassword\",\n            children: \"Confirm New Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"confirmPassword\",\n            value: confirmPassword,\n            onChange: e => setConfirmPassword(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: styles.submitButton,\n          disabled: loading,\n          children: loading ? 'Resetting...' : 'Reset Password'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true), message && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: styles.redirect,\n        children: [\"Redirecting to \", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/login\",\n          children: \"Login...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 32\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(ResetPasswordPage, \"AuX1kJgfuQhOuyHP7+SYeGDlBVg=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = ResetPasswordPage;\nexport default ResetPasswordPage;\nvar _c;\n$RefreshReg$(_c, \"ResetPasswordPage\");","map":{"version":3,"names":["React","useState","useParams","useNavigate","Link","api","styles","jsxDEV","_jsxDEV","Fragment","_Fragment","ResetPasswordPage","_s","password","setPassword","confirmPassword","setConfirmPassword","message","setMessage","error","setError","loading","setLoading","token","navigate","handleSubmit","e","preventDefault","data","resetPassword","msg","setTimeout","err","_err$response","_err$response$data","response","className","container","children","form","onSubmit","title","fileName","_jsxFileName","lineNumber","columnNumber","success","inputGroup","htmlFor","type","id","value","onChange","target","required","submitButton","disabled","redirect","to","_c","$RefreshReg$"],"sources":["C:/Users/SpiderEL/Desktop/webpage 5.0/frontend/src/pages/ResetPasswordPage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useParams, useNavigate, Link } from 'react-router-dom';\r\nimport * as api from '../api';\r\nimport styles from './LoginPage.module.css'; // Reuse login styles\r\n\r\nconst ResetPasswordPage = () => {\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [message, setMessage] = useState('');\r\n  const [error, setError] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const { token } = useParams(); // Get the token from the URL\r\n  const navigate = useNavigate();\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (password !== confirmPassword) {\r\n      return setError('Passwords do not match.');\r\n    }\r\n    setMessage('');\r\n    setError('');\r\n    setLoading(true);\r\n    try {\r\n      const { data } = await api.resetPassword(token, { password });\r\n      setMessage(data.msg);\r\n      // After a short delay, redirect to login\r\n      setTimeout(() => {\r\n        navigate('/login');\r\n      }, 3000);\r\n    } catch (err) {\r\n      setError(err.response?.data?.msg || 'An error occurred.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <form className={styles.form} onSubmit={handleSubmit}>\r\n        <h2 className={styles.title}>Reset Your Password</h2>\r\n        {message && <p className={styles.success}>{message}</p>}\r\n        {error && <p className={styles.error}>{error}</p>}\r\n        {!message && (\r\n          <>\r\n            <div className={styles.inputGroup}>\r\n              <label htmlFor=\"password\">New Password</label>\r\n              <input\r\n                type=\"password\"\r\n                id=\"password\"\r\n                value={password}\r\n                onChange={(e) => setPassword(e.target.value)}\r\n                required\r\n              />\r\n            </div>\r\n            <div className={styles.inputGroup}>\r\n              <label htmlFor=\"confirmPassword\">Confirm New Password</label>\r\n              <input\r\n                type=\"password\"\r\n                id=\"confirmPassword\"\r\n                value={confirmPassword}\r\n                onChange={(e) => setConfirmPassword(e.target.value)}\r\n                required\r\n              />\r\n            </div>\r\n            <button type=\"submit\" className={styles.submitButton} disabled={loading}>\r\n              {loading ? 'Resetting...' : 'Reset Password'}\r\n            </button>\r\n          </>\r\n        )}\r\n         {message && (\r\n            <p className={styles.redirect}>\r\n                Redirecting to <Link to=\"/login\">Login...</Link>\r\n            </p>\r\n        )}\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ResetPasswordPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}