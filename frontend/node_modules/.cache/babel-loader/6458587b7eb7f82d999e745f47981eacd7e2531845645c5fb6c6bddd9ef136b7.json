{"ast":null,"code":"import axios from 'axios';\n\n// Create an Axios instance with the base URL of your backend\nconst API = axios.create({\n  baseURL: 'http://localhost:5000/api'\n});\n\n// Add a request interceptor to include the token on all requests\n// This is a best practice so we don't have to add the header manually every time\nAPI.interceptors.request.use(req => {\n  if (localStorage.getItem('authToken')) {\n    req.headers['x-auth-token'] = localStorage.getItem('authToken');\n  }\n  return req;\n});\n\n// --- Auth Routes ---\nexport const register = formData => API.post('/auth/register', formData);\nexport const login = formData => API.post('/auth/login', formData);\nexport const forgotPassword = formData => API.post('/auth/forgot-password', formData);\nexport const resetPassword = (token, formData) => API.post(`/auth/reset-password/${token}`, formData);\n\n// --- Profile Routes ---\nexport const getProfile = () => API.get('/profile');\nexport const updateProfile = profileData => API.put('/profile', profileData);\nexport const deleteAccount = () => API.delete('/profile');\n\n// --- Settings Routes ---\nexport const getSettings = () => API.get('/settings');\nexport const updateSettings = settingsData => API.put('/settings', settingsData);\n\n// --- Dish Suggestion Route ---\nexport const getDishSuggestions = (query, type) => API.get(`/dishes/suggest?q=${query}&type=${type}`);\n\n// --- Menu Routes for Multiple Menus ---\nexport const getAllMenus = () => API.get('/menu');\nexport const createNewMenu = menuData => API.post('/menu', menuData);\nexport const getMenuById = id => API.get(`/menu/${id}`);\nexport const updateMenuById = (id, menuData) => API.put(`/menu/${id}`, menuData);\nexport const deleteMenuById = id => API.delete(`/menu/${id}`);\nexport const getPublicMenu = id => axios.get(`http://localhost:5000/api/menu/public/${id}`);\nexport const trackMenuView = id => axios.post(`http://localhost:5000/api/menu/public/${id}/view`);","map":{"version":3,"names":["axios","API","create","baseURL","interceptors","request","use","req","localStorage","getItem","headers","register","formData","post","login","forgotPassword","resetPassword","token","getProfile","get","updateProfile","profileData","put","deleteAccount","delete","getSettings","updateSettings","settingsData","getDishSuggestions","query","type","getAllMenus","createNewMenu","menuData","getMenuById","id","updateMenuById","deleteMenuById","getPublicMenu","trackMenuView"],"sources":["C:/Users/SpiderEL/Desktop/webpage 5.0/frontend/src/api/index.js"],"sourcesContent":["import axios from 'axios';\r\n\r\n// Create an Axios instance with the base URL of your backend\r\nconst API = axios.create({ baseURL: 'http://localhost:5000/api' });\r\n\r\n// Add a request interceptor to include the token on all requests\r\n// This is a best practice so we don't have to add the header manually every time\r\nAPI.interceptors.request.use((req) => {\r\n  if (localStorage.getItem('authToken')) {\r\n    req.headers['x-auth-token'] = localStorage.getItem('authToken');\r\n  }\r\n  return req;\r\n});\r\n\r\n// --- Auth Routes ---\r\nexport const register = (formData) => API.post('/auth/register', formData);\r\nexport const login = (formData) => API.post('/auth/login', formData);\r\nexport const forgotPassword = (formData) => API.post('/auth/forgot-password', formData);\r\nexport const resetPassword = (token, formData) => API.post(`/auth/reset-password/${token}`, formData);\r\n\r\n// --- Profile Routes ---\r\nexport const getProfile = () => API.get('/profile');\r\nexport const updateProfile = (profileData) => API.put('/profile', profileData);\r\nexport const deleteAccount = () => API.delete('/profile');\r\n\r\n// --- Settings Routes ---\r\nexport const getSettings = () => API.get('/settings');\r\nexport const updateSettings = (settingsData) => API.put('/settings', settingsData);\r\n\r\n// --- Dish Suggestion Route ---\r\nexport const getDishSuggestions = (query, type) => API.get(`/dishes/suggest?q=${query}&type=${type}`);\r\n\r\n// --- Menu Routes for Multiple Menus ---\r\nexport const getAllMenus = () => API.get('/menu');\r\nexport const createNewMenu = (menuData) => API.post('/menu', menuData);\r\nexport const getMenuById = (id) => API.get(`/menu/${id}`);\r\nexport const updateMenuById = (id, menuData) => API.put(`/menu/${id}`, menuData);\r\nexport const deleteMenuById = (id) => API.delete(`/menu/${id}`);\r\nexport const getPublicMenu = (id) => axios.get(`http://localhost:5000/api/menu/public/${id}`);\r\nexport const trackMenuView = (id) => axios.post(`http://localhost:5000/api/menu/public/${id}/view`);\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EAAEC,OAAO,EAAE;AAA4B,CAAC,CAAC;;AAElE;AACA;AACAF,GAAG,CAACG,YAAY,CAACC,OAAO,CAACC,GAAG,CAAEC,GAAG,IAAK;EACpC,IAAIC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,EAAE;IACrCF,GAAG,CAACG,OAAO,CAAC,cAAc,CAAC,GAAGF,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;EACjE;EACA,OAAOF,GAAG;AACZ,CAAC,CAAC;;AAEF;AACA,OAAO,MAAMI,QAAQ,GAAIC,QAAQ,IAAKX,GAAG,CAACY,IAAI,CAAC,gBAAgB,EAAED,QAAQ,CAAC;AAC1E,OAAO,MAAME,KAAK,GAAIF,QAAQ,IAAKX,GAAG,CAACY,IAAI,CAAC,aAAa,EAAED,QAAQ,CAAC;AACpE,OAAO,MAAMG,cAAc,GAAIH,QAAQ,IAAKX,GAAG,CAACY,IAAI,CAAC,uBAAuB,EAAED,QAAQ,CAAC;AACvF,OAAO,MAAMI,aAAa,GAAGA,CAACC,KAAK,EAAEL,QAAQ,KAAKX,GAAG,CAACY,IAAI,CAAC,wBAAwBI,KAAK,EAAE,EAAEL,QAAQ,CAAC;;AAErG;AACA,OAAO,MAAMM,UAAU,GAAGA,CAAA,KAAMjB,GAAG,CAACkB,GAAG,CAAC,UAAU,CAAC;AACnD,OAAO,MAAMC,aAAa,GAAIC,WAAW,IAAKpB,GAAG,CAACqB,GAAG,CAAC,UAAU,EAAED,WAAW,CAAC;AAC9E,OAAO,MAAME,aAAa,GAAGA,CAAA,KAAMtB,GAAG,CAACuB,MAAM,CAAC,UAAU,CAAC;;AAEzD;AACA,OAAO,MAAMC,WAAW,GAAGA,CAAA,KAAMxB,GAAG,CAACkB,GAAG,CAAC,WAAW,CAAC;AACrD,OAAO,MAAMO,cAAc,GAAIC,YAAY,IAAK1B,GAAG,CAACqB,GAAG,CAAC,WAAW,EAAEK,YAAY,CAAC;;AAElF;AACA,OAAO,MAAMC,kBAAkB,GAAGA,CAACC,KAAK,EAAEC,IAAI,KAAK7B,GAAG,CAACkB,GAAG,CAAC,qBAAqBU,KAAK,SAASC,IAAI,EAAE,CAAC;;AAErG;AACA,OAAO,MAAMC,WAAW,GAAGA,CAAA,KAAM9B,GAAG,CAACkB,GAAG,CAAC,OAAO,CAAC;AACjD,OAAO,MAAMa,aAAa,GAAIC,QAAQ,IAAKhC,GAAG,CAACY,IAAI,CAAC,OAAO,EAAEoB,QAAQ,CAAC;AACtE,OAAO,MAAMC,WAAW,GAAIC,EAAE,IAAKlC,GAAG,CAACkB,GAAG,CAAC,SAASgB,EAAE,EAAE,CAAC;AACzD,OAAO,MAAMC,cAAc,GAAGA,CAACD,EAAE,EAAEF,QAAQ,KAAKhC,GAAG,CAACqB,GAAG,CAAC,SAASa,EAAE,EAAE,EAAEF,QAAQ,CAAC;AAChF,OAAO,MAAMI,cAAc,GAAIF,EAAE,IAAKlC,GAAG,CAACuB,MAAM,CAAC,SAASW,EAAE,EAAE,CAAC;AAC/D,OAAO,MAAMG,aAAa,GAAIH,EAAE,IAAKnC,KAAK,CAACmB,GAAG,CAAC,yCAAyCgB,EAAE,EAAE,CAAC;AAC7F,OAAO,MAAMI,aAAa,GAAIJ,EAAE,IAAKnC,KAAK,CAACa,IAAI,CAAC,yCAAyCsB,EAAE,OAAO,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}